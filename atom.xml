<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kevin&#39;s Blog</title>
  
  <subtitle>Kevin&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kevin-que.github.io/"/>
  <updated>2018-02-20T05:49:49.400Z</updated>
  <id>http://kevin-que.github.io/</id>
  
  <author>
    <name>Kevin Que</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django + mysql + bootstrap 配置</title>
    <link href="http://kevin-que.github.io/2017/06/26/Django/"/>
    <id>http://kevin-que.github.io/2017/06/26/Django/</id>
    <published>2017-06-26T14:23:18.000Z</published>
    <updated>2018-02-20T05:49:49.400Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;环境：&quot;&gt;&lt;a href=&quot;#环境：&quot; class=&quot;headerlink&quot; title=&quot;环境：&quot;&gt;&lt;/a&gt;环境：&lt;/h2&gt;&lt;p&gt;1.windows: win 10 x64&lt;br&gt;2.python: python 3.5&lt;br&gt;3.Django: 1.11.2&lt;
      
    
    </summary>
    
    
      <category term="Django" scheme="http://kevin-que.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Django+bootstrap</title>
    <link href="http://kevin-que.github.io/2017/06/25/Django-bootstrap/"/>
    <id>http://kevin-que.github.io/2017/06/25/Django-bootstrap/</id>
    <published>2017-06-25T05:06:00.000Z</published>
    <updated>2018-02-20T05:49:52.992Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Bootstrap-简介&quot;&gt;&lt;a href=&quot;#Bootstrap-简介&quot; class=&quot;headerlink&quot; title=&quot;Bootstrap 简介&quot;&gt;&lt;/a&gt;Bootstrap 简介&lt;/h3&gt;&lt;p&gt;Bootstrap 是一个用于快速开发 Web 应用程序和网
      
    
    </summary>
    
    
      <category term="Django" scheme="http://kevin-que.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Python 学习笔记一</title>
    <link href="http://kevin-que.github.io/2017/06/18/Python/"/>
    <id>http://kevin-que.github.io/2017/06/18/Python/</id>
    <published>2017-06-18T07:46:21.000Z</published>
    <updated>2018-02-20T05:48:34.587Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;基础语法&quot;&gt;&lt;a href=&quot;#基础语法&quot; class=&quot;headerlink&quot; title=&quot;基础语法&quot;&gt;&lt;/a&gt;基础语法&lt;/h2&gt;&lt;p&gt;1.python 简介&lt;br&gt;2.python 安装&lt;br&gt;3.hello world&lt;br&gt;4.声明变量与变量规则&lt;br&gt;5.注释&lt;br&gt;6.行与缩进&lt;br&gt;7.多行语句&lt;br&gt;8.用户输入&lt;br&gt;9.数据类型&lt;br&gt;10.字符串&lt;br&gt;11.空行&lt;br&gt;12.多个语句构成代码组&lt;br&gt;13.print 输出&lt;br&gt;14.import 与 from…import&lt;br&gt;15.命令行参数&lt;/p&gt;
&lt;h3 id=&quot;1-python-简介&quot;&gt;&lt;a href=&quot;#1-python-简介&quot; class=&quot;headerlink&quot; title=&quot;1.python 简介&quot;&gt;&lt;/a&gt;1.python 简介&lt;/h3&gt;&lt;p&gt;python的创始人为吉多·范罗苏姆（Guido van Rossum）。1989年的圣诞节期间，吉多·范罗苏姆为了在阿姆斯特丹打发时间，决心开发一个新的脚本解释程序，作为ABC语言的一种继承。Python可以应用于众多领域，如：数据分析、组件集成、网络服务、图像处理、数值计算和科学计算等众多领域。 python 是属于一种解释型语言。&lt;/p&gt;
&lt;h3 id=&quot;2-python-安装&quot;&gt;&lt;a href=&quot;#2-python-安装&quot; class=&quot;headerlink&quot; title=&quot;2.python 安装&quot;&gt;&lt;/a&gt;2.python 安装&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.python.org/downloads/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.python.org/downloads/&lt;/a&gt;   下载最新的版本 3.X windows下一路点击next 完成安装， 注意勾选配置环境变量. Linux 下默认就有安装。&lt;br&gt;记得在命令行下查询python 版本&lt;br&gt;    &amp;gt; python -V&lt;/p&gt;
&lt;h3 id=&quot;3-hello-world&quot;&gt;&lt;a href=&quot;#3-hello-world&quot; class=&quot;headerlink&quot; title=&quot;3.hello world&quot;&gt;&lt;/a&gt;3.hello world&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#_*_coding:utf-8_*_ #指定字符编码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python  #指定解释器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;Hello World!&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将以上代码保存在hello.py文件中并使用python命令执行该脚本文件。在命令行下运行如下命令即可查看&lt;br&gt;    &amp;gt; python hello.py&lt;/p&gt;
&lt;h3 id=&quot;4-声明变量与变量规则&quot;&gt;&lt;a href=&quot;#4-声明变量与变量规则&quot; class=&quot;headerlink&quot; title=&quot;4.声明变量与变量规则&quot;&gt;&lt;/a&gt;4.声明变量与变量规则&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#_*_coding:utf-8_*_&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name = &amp;quot;kevin&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码声明了一个变量，变量名为： name，变量name的值为：”kevin”　&lt;/p&gt;
&lt;h4 id=&quot;变量定义的规则：&quot;&gt;&lt;a href=&quot;#变量定义的规则：&quot; class=&quot;headerlink&quot; title=&quot;变量定义的规则：&quot;&gt;&lt;/a&gt;变量定义的规则：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;变量名只能是 字母、数字或下划线的任意组合&lt;/li&gt;
&lt;li&gt;变量名的第一个字符不能是数字&lt;/li&gt;
&lt;li&gt;以下关键字不能声明为变量名&lt;br&gt;[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;5-注释&quot;&gt;&lt;a href=&quot;#5-注释&quot; class=&quot;headerlink&quot; title=&quot;5.注释&quot;&gt;&lt;/a&gt;5.注释&lt;/h3&gt;&lt;p&gt;当行注视：# 被注释内容&lt;br&gt;多行注释：””” 被注释内容 “””&lt;/p&gt;
&lt;h3 id=&quot;6-行与缩进&quot;&gt;&lt;a href=&quot;#6-行与缩进&quot; class=&quot;headerlink&quot; title=&quot;6.行与缩进&quot;&gt;&lt;/a&gt;6.行与缩进&lt;/h3&gt;&lt;p&gt;python最具特色的就是使用缩进来表示代码块，不需要使用大括号({})。&lt;br&gt;缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数。实例如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if True:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print (&amp;quot;True&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print (&amp;quot;False&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://kevin-que.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建Github-Pages博客填坑教程</title>
    <link href="http://kevin-que.github.io/2017/01/03/hexo/"/>
    <id>http://kevin-que.github.io/2017/01/03/hexo/</id>
    <published>2017-01-03T06:37:00.000Z</published>
    <updated>2018-02-20T05:48:23.610Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;目录：&lt;/p&gt;
&lt;p&gt;1.安装Hexo&lt;br&gt;2.部署Hexo&lt;br&gt;3.Hexo命令&lt;br&gt;4.一些报错处理&lt;br&gt;5.博客管理&lt;br&gt;6.插件（RSS、Sitemap）&lt;br&gt;7.评论设置&lt;br&gt;8.404页面&lt;br&gt;9.统计&lt;br&gt;10.更新&lt;br&gt;11.总结&lt;br&gt;12.参考引用&lt;br&gt;13.搭建博客相关网站&lt;br&gt;简述&lt;br&gt;本文主要讲解Hexo安装时遇到的坑，Hexo安装之后的使用教程，Hexo安装需要的环境和教程，请自行百度、谷歌。&lt;/p&gt;
&lt;p&gt;1.安装Hexo&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install -g hexo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;坑1&lt;br&gt;这里可能安装失败，可能权限不够，在命令前加sudo&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo npm install -g hexo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.部署Hexo&lt;br&gt;    $ hexo init&lt;br&gt;注：这个命令会初始化博客的目录，所以，执行这个命令时，在你想创建的目录下执行，就自动生成到对应目录下。&lt;br&gt;执行命令生，会在当前命令的路径下，生成以下文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
├── .deploy
├── public
├── scaffolds
├── scripts
├── source
|   ├── _drafts
|   └── _posts
├── themes
├── _config.yml
└── package.json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;.deploy：执行hexo deploy命令部署到GitHub上的内容目录&lt;br&gt;public：执行hexo generate命令，输出的静态网页内容目录&lt;br&gt;scaffolds：layout模板文件目录，其中的md文件可以添加编辑&lt;br&gt;scripts：扩展脚本目录，这里可以自定义一些javascript脚本&lt;br&gt;source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。&lt;br&gt;_drafts：草稿文章&lt;br&gt;_posts：发布文章&lt;br&gt;themes：主题文件目录&lt;br&gt;_config.yml：全局配置文件，大多数的设置都在这里&lt;br&gt;package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮&lt;br&gt;3.Hexo命令&lt;br&gt;Hexo下，通过 _config.yml 设置博客，可以想象成我们用的软件里的设置一样，只是它通过一个文件列出这些参数，然后让我们填写和修改。&lt;/p&gt;
&lt;p&gt;全局设置&lt;br&gt;在你博客目录下有一个文件名_config.yml，打开可以配置信息。&lt;/p&gt;
&lt;p&gt;局部页面&lt;br&gt;在你博客目录下 \themes\你使用的主题_config.yml&lt;/p&gt;
&lt;p&gt;写博客相关命令&lt;br&gt;    Hexo常用命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo new &amp;quot;postName&amp;quot;       #新建文章
hexo new page &amp;quot;pageName&amp;quot;  #新建页面
hexo generate             #生成静态页面至public目录
hexo server               #开启预览访问端口（默认端口4000，&amp;apos;ctrl + c&amp;apos;关闭server）
hexo deploy               #将.deploy目录部署到GitHub
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然，如果每次输入那么长命令，那么一定想到用简写：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其它的，还可以复合命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo deploy -g
hexo server -g
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有时候生成的网页出错了，而生成的rss其实没有清除，那么用下面的命令，在重新生成吧&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo clean
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当本地调试出现诡异现象时候，请先使用 hexo clean 清理已经生成的静态文件后重试。&lt;/p&gt;
&lt;p&gt;注：Hexo原理就是hexo在执行hexo generate时会在本地先把博客生成的一套静态站点放到public文件夹中，在执行hexo deploy时将其复制到.deploy文件夹中。Github的版本库通常建议同时附上README.md说明文件，但是hexo默认情况下会把所有md文件解析成html文件，所以即使你在线生成了README.md，它也会在你下一次部署时被删去。怎么解决呢？&lt;br&gt;在执行hexo deploy前把在本地写好的README.md文件复制到.deploy文件夹中，再去执行hexo deploy。&lt;br&gt;4.一些报错处理&lt;br&gt;坑2&lt;br&gt;一&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ERROR Plugin load failed: hexo-server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;原因：&lt;br&gt;Besides, utilities are separated into a standalone module. hexo.util is not reachable anymore.&lt;br&gt;解决方法，执行命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo npm install hexo-server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;二&lt;/p&gt;
&lt;p&gt;执行命令hexo server，有如下提示：&lt;br&gt;Usage: hexo&lt;br&gt;….&lt;br&gt;原因：&lt;br&gt;我认为是没有生成本地服务&lt;br&gt;解决方法，执行命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-server --save
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;提示：&lt;a href=&quot;mailto:hexo-server@0.1.2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-server@0.1.2&lt;/a&gt; node_modules/hexo-server&lt;br&gt;三&lt;br&gt;白板和Cannot GET / 几个字&lt;br&gt;原因:&lt;br&gt;由于2.6以后就更新了，我们需要手动配置些东西，我们需要输入下面三行命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-renderer-ejs --save
npm install hexo-renderer-stylus --save
npm install hexo-renderer-marked --save
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;   这个时候再重新生成静态文件，命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo generate （或hexo g）
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;   启动本地服务器：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo server （或hexo s）
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;5.博客管理&lt;br&gt;上面命令中，其实生成文章，可以直接把写好的文章插入到目录/_posts 下面，后缀为.MD就行，在文章头部固定格式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;title: Mac提高使用效率的一些方法   #文章的标题，这个才是显示的文章标题，其实文件名不影响
date: 2015-09-01 20:33:26      #用命令会自动生成，也可以自己写，所以文章时间可以改
categories: technology         #文章的分类，这个可以自己定义
tags: [Mac,效率,快捷方式]        #tag，为文章添加标签，方便搜索
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然，里面有很多东西的，如果你专注于写作，那么可以不用太关心了，比如tags标签可以写成下面那样，因为hexo文章的头部文件是用AML来写的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tags:
- tag1
- tag2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果在博客文章列表中，不想全文显示，可以增加
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello 2017！</title>
    <link href="http://kevin-que.github.io/2017/01/03/my-first-blog/"/>
    <id>http://kevin-que.github.io/2017/01/03/my-first-blog/</id>
    <published>2017-01-03T02:43:35.000Z</published>
    <updated>2018-02-20T05:48:29.295Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Happy new year ! hello 2017! 2017-01-01&lt;br&gt;你好！2017！ 一起同行，加油，学习python!&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="随笔" scheme="http://kevin-que.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
